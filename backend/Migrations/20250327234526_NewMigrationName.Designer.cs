// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projet_1.Data;

#nullable disable

namespace projet_1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250327234526_NewMigrationName")]
    partial class NewMigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projet_1.Models.Consultation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateConsultation")
                        .HasColumnType("datetime2");

                    b.Property<int>("DossierMedicalId")
                        .HasColumnType("int");

                    b.Property<string>("Historique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DossierMedicalId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Consultations");
                });

            modelBuilder.Entity("projet_1.Models.DossierMedical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoriqueMedical")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentifiantFiscale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDossier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("DossiersMedicaux");
                });

            modelBuilder.Entity("projet_1.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnvoyeurId")
                        .HasColumnType("int");

                    b.Property<int>("ReceveurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnvoyeurId");

                    b.HasIndex("ReceveurId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("projet_1.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNotification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("projet_1.Models.Traitement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsultationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomTraitement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultationId");

                    b.ToTable("Traitements");
                });

            modelBuilder.Entity("projet_1.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("projet_1.Models.Consultation", b =>
                {
                    b.HasOne("projet_1.Models.DossierMedical", "DossierMedical")
                        .WithMany("Consultations")
                        .HasForeignKey("DossierMedicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projet_1.Models.Utilisateur", "Utilisateur")
                        .WithMany("Consultations")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DossierMedical");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("projet_1.Models.DossierMedical", b =>
                {
                    b.HasOne("projet_1.Models.Utilisateur", "Utilisateur")
                        .WithMany("DossiersMedicaux")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("projet_1.Models.Message", b =>
                {
                    b.HasOne("projet_1.Models.Utilisateur", "Envoyeur")
                        .WithMany("MessagesEnvoyes")
                        .HasForeignKey("EnvoyeurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("projet_1.Models.Utilisateur", "Receveur")
                        .WithMany("MessagesRecus")
                        .HasForeignKey("ReceveurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Envoyeur");

                    b.Navigation("Receveur");
                });

            modelBuilder.Entity("projet_1.Models.Notification", b =>
                {
                    b.HasOne("projet_1.Models.Utilisateur", "Utilisateur")
                        .WithMany("Notifications")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("projet_1.Models.Traitement", b =>
                {
                    b.HasOne("projet_1.Models.Consultation", "Consultation")
                        .WithMany("Traitements")
                        .HasForeignKey("ConsultationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultation");
                });

            modelBuilder.Entity("projet_1.Models.Consultation", b =>
                {
                    b.Navigation("Traitements");
                });

            modelBuilder.Entity("projet_1.Models.DossierMedical", b =>
                {
                    b.Navigation("Consultations");
                });

            modelBuilder.Entity("projet_1.Models.Utilisateur", b =>
                {
                    b.Navigation("Consultations");

                    b.Navigation("DossiersMedicaux");

                    b.Navigation("MessagesEnvoyes");

                    b.Navigation("MessagesRecus");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
